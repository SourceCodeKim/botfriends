{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchChange","type","placeholder","onChange","scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","console","log","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","Scroll","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yOAaeA,EAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCmBOK,EAxBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAElB,OACC,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHXS,SCIEC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OACC,qBAAKT,UAAU,MAAf,SACA,uBACCU,KAAK,SACLV,UAAW,mCACXW,YAAY,gBACZC,SAAUH,OCCEI,G,MARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,aC2CKC,E,kDAzCd,aAAe,IAAD,8BACb,gBAgBDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,QAE1CC,QAAQC,IAAIN,EAAMG,OAAOC,QAlBzB,EAAKG,MAAQ,CACZzB,OAAQ,GACRoB,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBM,MAAM,8CACLC,MAAK,SAAAC,GAAW,OAAOA,EAASC,UAChCF,MAAK,SAAAG,GAAW,EAAKX,SAAS,CAAEnB,OAAQ8B,S,oBAY1C,WAAU,IAAD,OACFC,EAAiBC,KAAKP,MAAMzB,OAAOiC,QAAO,SAAAC,GAC/C,OAAOA,EAAMzC,KAAK0C,cAAcC,SAAS,EAAKX,MAAML,YAAYe,kBAEjE,OACC,sBAAKvC,UAAU,KAAf,UACC,4CACA,cAAC,EAAD,CAAWS,aAAc2B,KAAKf,iBAC9B,cAACoB,EAAD,UACA,cAAC,EAAD,CAAUrC,OAAQ+B,a,GAjCJO,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IAASC,SAASC,eAAe,SAMnCX,M","file":"static/js/main.a3b161cd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n\treturn (\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?100x100`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>)\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\n\treturn ( \n\t\t<div>\n\t\t  \t{\n\t\t  \t\trobots.map((user, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey ={i} \n\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\n\t\t  \t}\n\t \t</div>\n\n\t);\n};\n\n\nexport default CardList;","import React from 'react';\n\nconst Searchbox = ({ searchChange }) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t<input \n\t\t\ttype='search' \n\t\t\tclassName ='pa3 ba b--green bg-lightest-blue'\n\t\t\tplaceholder='search robots' \n\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Searchbox","import React from 'react';\n\nconst scroll = (props) => {\n\treturn (\n\t\t<div style={{ overflow: 'scroll', border: '2px solid black', height: '800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n};\n\nexport default scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport Searchbox from '../components/Searchbox';\nimport Style from '../containers/App.css';\nimport Scroll from '../components/Scroll';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response=>{return response.json()})\n\t\t.then(users => { this.setState({ robots: users })\n\t\t})\n\n\t}\n\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value })\n\t\t\n\t\tconsole.log(event.target.value);\n\t}\n\t\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n\t\t})\n\t\treturn (\n\t\t\t<div className='tc'>\n\t\t\t\t<h1>BotFriends</h1>\n\t\t\t\t<Searchbox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\t\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n \t<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}